# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: base.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\nbase.proto\x12\x0bridesharing\"\x07\n\x05\x45mpty\"/\n\x08Location\x12\x10\n\x08latitude\x18\x01 \x01(\x02\x12\x11\n\tlongitude\x18\x02 \x01(\x02\"\xa2\x01\n\x12RequestTripRequest\x12\x10\n\x08rider_id\x18\x01 \x01(\t\x12$\n\x05start\x18\x02 \x01(\x0b\x32\x15.ridesharing.Location\x12*\n\x0b\x64\x65stination\x18\x03 \x01(\x0b\x32\x15.ridesharing.Location\x12(\n\tride_type\x18\x04 \x01(\x0e\x32\x15.ridesharing.RideType\"&\n\x13RequestTripResponse\x12\x0f\n\x07trip_id\x18\x01 \x01(\t\"$\n\x11\x43\x61ncelTripRequest\x12\x0f\n\x07trip_id\x18\x01 \x01(\t\"L\n\x1aSeekForTripAsDriverRequest\x12.\n\x0f\x64river_location\x18\x01 \x01(\x0b\x32\x15.ridesharing.Location\"\x92\x01\n\x1bSeekForTripAsDriverResponse\x12\x0f\n\x07trip_id\x18\x01 \x01(\t\x12\x10\n\x08rider_id\x18\x02 \x01(\t\x12$\n\x05start\x18\x03 \x01(\x0b\x32\x15.ridesharing.Location\x12*\n\x0b\x64\x65stination\x18\x04 \x01(\x0b\x32\x15.ridesharing.Location\"Y\n\x05Route\x12$\n\x05start\x18\x01 \x01(\x0b\x32\x15.ridesharing.Location\x12*\n\x0b\x64\x65stination\x18\x02 \x01(\x0b\x32\x15.ridesharing.Location\"=\n\x18\x43\x61lculateDistanceRequest\x12!\n\x05route\x18\x01 \x01(\x0b\x32\x12.ridesharing.Route\"-\n\x19\x43\x61lculateDistanceResponse\x12\x10\n\x08\x64istance\x18\x01 \x01(\x02\">\n\x19MakeTimeEstimationRequest\x12!\n\x05route\x18\x01 \x01(\x0b\x32\x12.ridesharing.Route\")\n\x1aMakeTimeEstimationResponse\x12\x0b\n\x03\x65ta\x18\x01 \x01(\x02\"%\n\x12\x44oGeocodingRequest\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\">\n\x13\x44oGeocodingResponse\x12\'\n\x08location\x18\x01 \x01(\x0b\x32\x15.ridesharing.Location\"M\n\x14\x43\x61lculateCostRequest\x12#\n\x04type\x18\x01 \x01(\x0e\x32\x15.ridesharing.RideType\x12\x10\n\x08\x64istance\x18\x02 \x01(\x02\"%\n\x15\x43\x61lculateCostResponse\x12\x0c\n\x04\x63ost\x18\x01 \x01(\x02*1\n\x08RideType\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0b\n\x07\x43OMFORT\x10\x01\x12\x0b\n\x07PREMIUM\x10\x02\x32\x8f\x02\n\x0bTripService\x12P\n\x0bRequestTrip\x12\x1f.ridesharing.RequestTripRequest\x1a .ridesharing.RequestTripResponse\x12@\n\nCancelTrip\x12\x1e.ridesharing.CancelTripRequest\x1a\x12.ridesharing.Empty\x12l\n\x13SeekForTripAsDriver\x12\'.ridesharing.SeekForTripAsDriverRequest\x1a(.ridesharing.SeekForTripAsDriverResponse(\x01\x30\x01\x32\xad\x02\n\x0eMappingService\x12\x62\n\x11\x43\x61lculateDistance\x12%.ridesharing.CalculateDistanceRequest\x1a&.ridesharing.CalculateDistanceResponse\x12\x65\n\x12MakeTimeEstimation\x12&.ridesharing.MakeTimeEstimationRequest\x1a\'.ridesharing.MakeTimeEstimationResponse\x12P\n\x0b\x44oGeocoding\x12\x1f.ridesharing.DoGeocodingRequest\x1a .ridesharing.DoGeocodingResponse2h\n\x0ePricingService\x12V\n\rCalculateCost\x12!.ridesharing.CalculateCostRequest\x1a\".ridesharing.CalculateCostResponseB\x0cZ\n./genprotob\x06proto3')

_RIDETYPE = DESCRIPTOR.enum_types_by_name['RideType']
RideType = enum_type_wrapper.EnumTypeWrapper(_RIDETYPE)
DEFAULT = 0
COMFORT = 1
PREMIUM = 2


_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_LOCATION = DESCRIPTOR.message_types_by_name['Location']
_REQUESTTRIPREQUEST = DESCRIPTOR.message_types_by_name['RequestTripRequest']
_REQUESTTRIPRESPONSE = DESCRIPTOR.message_types_by_name['RequestTripResponse']
_CANCELTRIPREQUEST = DESCRIPTOR.message_types_by_name['CancelTripRequest']
_SEEKFORTRIPASDRIVERREQUEST = DESCRIPTOR.message_types_by_name['SeekForTripAsDriverRequest']
_SEEKFORTRIPASDRIVERRESPONSE = DESCRIPTOR.message_types_by_name['SeekForTripAsDriverResponse']
_ROUTE = DESCRIPTOR.message_types_by_name['Route']
_CALCULATEDISTANCEREQUEST = DESCRIPTOR.message_types_by_name['CalculateDistanceRequest']
_CALCULATEDISTANCERESPONSE = DESCRIPTOR.message_types_by_name['CalculateDistanceResponse']
_MAKETIMEESTIMATIONREQUEST = DESCRIPTOR.message_types_by_name['MakeTimeEstimationRequest']
_MAKETIMEESTIMATIONRESPONSE = DESCRIPTOR.message_types_by_name['MakeTimeEstimationResponse']
_DOGEOCODINGREQUEST = DESCRIPTOR.message_types_by_name['DoGeocodingRequest']
_DOGEOCODINGRESPONSE = DESCRIPTOR.message_types_by_name['DoGeocodingResponse']
_CALCULATECOSTREQUEST = DESCRIPTOR.message_types_by_name['CalculateCostRequest']
_CALCULATECOSTRESPONSE = DESCRIPTOR.message_types_by_name['CalculateCostResponse']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.Empty)
  })
_sym_db.RegisterMessage(Empty)

Location = _reflection.GeneratedProtocolMessageType('Location', (_message.Message,), {
  'DESCRIPTOR' : _LOCATION,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.Location)
  })
_sym_db.RegisterMessage(Location)

RequestTripRequest = _reflection.GeneratedProtocolMessageType('RequestTripRequest', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTTRIPREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.RequestTripRequest)
  })
_sym_db.RegisterMessage(RequestTripRequest)

RequestTripResponse = _reflection.GeneratedProtocolMessageType('RequestTripResponse', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTTRIPRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.RequestTripResponse)
  })
_sym_db.RegisterMessage(RequestTripResponse)

CancelTripRequest = _reflection.GeneratedProtocolMessageType('CancelTripRequest', (_message.Message,), {
  'DESCRIPTOR' : _CANCELTRIPREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.CancelTripRequest)
  })
_sym_db.RegisterMessage(CancelTripRequest)

SeekForTripAsDriverRequest = _reflection.GeneratedProtocolMessageType('SeekForTripAsDriverRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEEKFORTRIPASDRIVERREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.SeekForTripAsDriverRequest)
  })
_sym_db.RegisterMessage(SeekForTripAsDriverRequest)

SeekForTripAsDriverResponse = _reflection.GeneratedProtocolMessageType('SeekForTripAsDriverResponse', (_message.Message,), {
  'DESCRIPTOR' : _SEEKFORTRIPASDRIVERRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.SeekForTripAsDriverResponse)
  })
_sym_db.RegisterMessage(SeekForTripAsDriverResponse)

Route = _reflection.GeneratedProtocolMessageType('Route', (_message.Message,), {
  'DESCRIPTOR' : _ROUTE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.Route)
  })
_sym_db.RegisterMessage(Route)

CalculateDistanceRequest = _reflection.GeneratedProtocolMessageType('CalculateDistanceRequest', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATEDISTANCEREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.CalculateDistanceRequest)
  })
_sym_db.RegisterMessage(CalculateDistanceRequest)

CalculateDistanceResponse = _reflection.GeneratedProtocolMessageType('CalculateDistanceResponse', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATEDISTANCERESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.CalculateDistanceResponse)
  })
_sym_db.RegisterMessage(CalculateDistanceResponse)

MakeTimeEstimationRequest = _reflection.GeneratedProtocolMessageType('MakeTimeEstimationRequest', (_message.Message,), {
  'DESCRIPTOR' : _MAKETIMEESTIMATIONREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.MakeTimeEstimationRequest)
  })
_sym_db.RegisterMessage(MakeTimeEstimationRequest)

MakeTimeEstimationResponse = _reflection.GeneratedProtocolMessageType('MakeTimeEstimationResponse', (_message.Message,), {
  'DESCRIPTOR' : _MAKETIMEESTIMATIONRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.MakeTimeEstimationResponse)
  })
_sym_db.RegisterMessage(MakeTimeEstimationResponse)

DoGeocodingRequest = _reflection.GeneratedProtocolMessageType('DoGeocodingRequest', (_message.Message,), {
  'DESCRIPTOR' : _DOGEOCODINGREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.DoGeocodingRequest)
  })
_sym_db.RegisterMessage(DoGeocodingRequest)

DoGeocodingResponse = _reflection.GeneratedProtocolMessageType('DoGeocodingResponse', (_message.Message,), {
  'DESCRIPTOR' : _DOGEOCODINGRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.DoGeocodingResponse)
  })
_sym_db.RegisterMessage(DoGeocodingResponse)

CalculateCostRequest = _reflection.GeneratedProtocolMessageType('CalculateCostRequest', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATECOSTREQUEST,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.CalculateCostRequest)
  })
_sym_db.RegisterMessage(CalculateCostRequest)

CalculateCostResponse = _reflection.GeneratedProtocolMessageType('CalculateCostResponse', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATECOSTRESPONSE,
  '__module__' : 'base_pb2'
  # @@protoc_insertion_point(class_scope:ridesharing.CalculateCostResponse)
  })
_sym_db.RegisterMessage(CalculateCostResponse)

_TRIPSERVICE = DESCRIPTOR.services_by_name['TripService']
_MAPPINGSERVICE = DESCRIPTOR.services_by_name['MappingService']
_PRICINGSERVICE = DESCRIPTOR.services_by_name['PricingService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\n./genproto'
  _RIDETYPE._serialized_start=1084
  _RIDETYPE._serialized_end=1133
  _EMPTY._serialized_start=27
  _EMPTY._serialized_end=34
  _LOCATION._serialized_start=36
  _LOCATION._serialized_end=83
  _REQUESTTRIPREQUEST._serialized_start=86
  _REQUESTTRIPREQUEST._serialized_end=248
  _REQUESTTRIPRESPONSE._serialized_start=250
  _REQUESTTRIPRESPONSE._serialized_end=288
  _CANCELTRIPREQUEST._serialized_start=290
  _CANCELTRIPREQUEST._serialized_end=326
  _SEEKFORTRIPASDRIVERREQUEST._serialized_start=328
  _SEEKFORTRIPASDRIVERREQUEST._serialized_end=404
  _SEEKFORTRIPASDRIVERRESPONSE._serialized_start=407
  _SEEKFORTRIPASDRIVERRESPONSE._serialized_end=553
  _ROUTE._serialized_start=555
  _ROUTE._serialized_end=644
  _CALCULATEDISTANCEREQUEST._serialized_start=646
  _CALCULATEDISTANCEREQUEST._serialized_end=707
  _CALCULATEDISTANCERESPONSE._serialized_start=709
  _CALCULATEDISTANCERESPONSE._serialized_end=754
  _MAKETIMEESTIMATIONREQUEST._serialized_start=756
  _MAKETIMEESTIMATIONREQUEST._serialized_end=818
  _MAKETIMEESTIMATIONRESPONSE._serialized_start=820
  _MAKETIMEESTIMATIONRESPONSE._serialized_end=861
  _DOGEOCODINGREQUEST._serialized_start=863
  _DOGEOCODINGREQUEST._serialized_end=900
  _DOGEOCODINGRESPONSE._serialized_start=902
  _DOGEOCODINGRESPONSE._serialized_end=964
  _CALCULATECOSTREQUEST._serialized_start=966
  _CALCULATECOSTREQUEST._serialized_end=1043
  _CALCULATECOSTRESPONSE._serialized_start=1045
  _CALCULATECOSTRESPONSE._serialized_end=1082
  _TRIPSERVICE._serialized_start=1136
  _TRIPSERVICE._serialized_end=1407
  _MAPPINGSERVICE._serialized_start=1410
  _MAPPINGSERVICE._serialized_end=1711
  _PRICINGSERVICE._serialized_start=1713
  _PRICINGSERVICE._serialized_end=1817
# @@protoc_insertion_point(module_scope)
